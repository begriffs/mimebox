#!/bin/sh -eu

rm -f config.mk

pkg-config --print-errors 'libcmark >= 0.20'

cat >> config.mk <<-EOF
	CFLAGS += $(pkg-config --cflags libcmark)
	LDFLAGS += $(pkg-config --libs-only-L libcmark)
	LDLIBS += $(pkg-config --libs-only-l libcmark)
EOF

compiles ()
{
	stage="$(mktemp -d)"
	echo "$2" > "$stage/test.c"
	(cc -Werror "$1" -o "$stage/test" "$stage/test.c" >/dev/null 2>&1)
	cc_success=$?
	rm -rf "$stage"
	return $cc_success
}

if compiles "" "
	#include <stdint.h>
	#include <stdlib.h>
	int main(void)
	{
		void (*p)(void *, size_t) = arc4random_buf;
		return (intptr_t)p;
	}"
then
	echo "CFLAGS += -DHAVE_ARC4RANDOM" >> config.mk
fi

if compiles "-D_POSIX_C_SOURCE=200112L" "
	#include <stdint.h>
	#include <sys/types.h>
	#include <sys/random.h>
	int main(void)
	{
		ssize_t (*p)(void *, size_t, unsigned int) = getrandom;
		return (intptr_t)p;
	}"
then
	echo "CFLAGS += -DHAVE_GETRANDOM" >> config.mk

elif compiles "-D_GNU_SOURCE" "
    #include <unistd.h>
    #include <sys/syscall.h>
    int main(void)
    {
        long n = SYS_getrandom;
        long (*p)(long, ...) = syscall;
        return (intptr_t)p & n;
    }"
then
    echo "CFLAGS += -DHAVE_GETRANDOM_SYSCALL" >> config.mk
fi
